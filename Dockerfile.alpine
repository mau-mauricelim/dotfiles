FROM alpine:3.19.1
ENV LANG=C.UTF-8 \
    LANGUAGE=C.UTF-8 \
    LC_ALL=C.UTF-8 \
    TERM=xterm-256color

# ARG should be after FROM
ARG USERNAME=maurice
ARG USER_UID=1000
ARG USER_GID=$USER_UID
ARG HOME=/home/$USERNAME

# To search and add entry in man:
# 1. apk add mandoc-apropos
# 2. apk search <entry> | grep doc
# 3. apk add <package>-doc

# Install required packages
RUN apk -q --no-progress --no-cache add \
        # coreutils is for dircolors
        sudo zsh coreutils ripgrep fd tar bzip2 rlwrap bat zoxide curl git vim lazygit stow delta openssh tmux jq yazi \
        build-base \
        # util-linux-misc is for script
        python3 eza neovim bash util-linux-misc \
        # Entry in man
        mandoc man-pages less \
        # Install the documentation companion package
        docs && \
    # Create user
    addgroup --gid $USER_GID $USERNAME && \
        # Set Zsh as the default shell
        adduser --system $USERNAME --shell /bin/zsh --uid $USER_UID && \
        mkdir -p /etc/sudoers.d && \
        echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME && \
        chmod 0440 /etc/sudoers.d/$USERNAME && \
    # Set default user for WSL and Network settings
    echo -e "[user]\ndefault=$USERNAME\n[interop]\nappendWindowsPath=false" >> /etc/wsl.conf && \
    # ISSUE: WSL interoperability with Apline. /etc/profile overwrites the PATH variable in .zshenv
    sed -i "s/^export PATH/#export PATH/" /etc/profile

# Set default user
USER $USERNAME
WORKDIR $HOME
# Setup dotfiles
COPY --chown=$USERNAME:$USERNAME tests /tmp/tests

SHELL ["/bin/bash", "-c"]

# Bootstrap
# Create the top level directories before stowing so that stow does not symlink from the top level
RUN mkdir -p $HOME/.config/{nvim,tmux,yazi,zsh} $HOME/.{local/bin,vim} && \
    # Stow the dotfiles
    git clone https://github.com/mau-mauricelim/dotfiles.git $HOME/dotfiles && \
        cd $HOME/dotfiles && git remote set-url origin git@github.com:mau-mauricelim/dotfiles.git && \
        stow . && git restore . && cd $HOME && \
    # Create a symlink for zshenv to HOME
    ln -s $HOME/.config/zsh/.zshenv $HOME/.zshenv && \
    # Source the latest zshenv
    source $HOME/.zshenv && \
    # Create ZDOTDIR and XDG_DATA_HOME directories
    mkdir -p $ZDOTDIR $XDG_DATA_HOME/{nvim,vim}/{undo,swap,backup} && \
    # Zsh Theme - Powerlevel10k (Requires manual font installation)
    git clone -q --depth=1 https://github.com/romkatv/powerlevel10k.git $ZDOTDIR/powerlevel10k && \
    # Zsh Auto Suggestions
    git clone -q https://github.com/zsh-users/zsh-autosuggestions $ZDOTDIR/zsh-autosuggestions && \
    # Zsh Syntax Highlighting
    git clone -q https://github.com/zsh-users/zsh-syntax-highlighting.git $ZDOTDIR/zsh-syntax-highlighting && \
    # Clipboard integration - NOTE that there may be some delays when copying and pasting
    curl -sfLo $HOME/win32yank.zip https://github.com/equalsraf/win32yank/releases/latest/download/win32yank-x64.zip && \
        unzip -q $HOME/win32yank.zip -d $HOME/win32yank && \
        chmod +x $HOME/win32yank/win32yank.exe && \
        mv $HOME/win32yank/win32yank.exe $HOME/.local/bin && \
        rm -rf $HOME/win32yank.zip $HOME/win32yank && \
    # Install vim-plug for Vim
    curl -sfLo $HOME/.vim/autoload/plug.vim --create-dirs \
        https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim && \
    # Run PlugInstall non-interactively from command line
    vim +'PlugInstall --sync' +qa && \
    # Run Lazy install, clean and update non-interactively from command line
    nvim --headless '+Lazy! sync' +qa && \
    # fzf
    git clone -q --depth 1 https://github.com/junegunn/fzf.git $ZDOTDIR/fzf && \
        $ZDOTDIR/fzf/install --xdg --no-update-rc --completion --key-bindings >/dev/null 2>&1 && \
    # Vim syntax and indent
    mkdir -p $HOME/.vim/{indent,syntax} && \
        git clone -q https://github.com/katusk/vim-qkdb-syntax.git $HOME/.vim/vim-qkdb-syntax && \
            ln -s $HOME/.vim/vim-qkdb-syntax/indent/{k,q}.vim $HOME/.vim/indent && \
            ln -s $HOME/.vim/vim-qkdb-syntax/syntax/k.vim $HOME/.vim/syntax && \
        git clone -q https://github.com/jshinonome/vim-q-syntax.git $HOME/.vim/vim-q-syntax && \
            ln -s $HOME/.vim/vim-q-syntax/syntax/q.vim $HOME/.vim/syntax && \
    # Symlink Vim syntax and indent files to Neovim
    ln -s $HOME/.vim/indent $XDG_CONFIG_HOME/nvim && \
        ln -s $HOME/.vim/syntax $XDG_CONFIG_HOME/nvim && \
    # bash and zsh key bindings for Git objects, powered by fzf.
    curl -so $XDG_CONFIG_HOME/fzf/fzf-git.sh https://raw.githubusercontent.com/junegunn/fzf-git.sh/main/fzf-git.sh && \
    # TPM installation
    git clone https://github.com/tmux-plugins/tpm $HOME/.tmux/plugins/tpm && $HOME/.tmux/plugins/tpm/bin/install_plugins && \
    # TODO: Include npm installation
    # Install yazi themes
    git clone https://github.com/yazi-rs/flavors.git flavors && \
        mkdir -p $XDG_CONFIG_HOME/yazi/flavors && \
        mv flavors/*.yazi $XDG_CONFIG_HOME/yazi/flavors && rm -rf flavors && \
    # Run tests
    source $HOME/.bashrc && \
        echo -e "\n#########\n# TESTS #\n#########\n" && \
        for test in /tmp/tests/*.sh; do bash "$test"; done && \
        rm -rf /tmp/tests && \
    # Start zsh and exit (It'll allow powerlevel10k to do everything it needs to do on first run.)
    echo exit | script -qec zsh /dev/null >/dev/null && \
    # Clean up
    sudo apk del util-linux-misc
# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Set the wallpaper with feh
exec --no-startup-id feh --bg-scale ~/.config/i3/wallpaper/ocean_with_cloud.png

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:JetBrainsMono Nerd Font 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
# font pango:DejaVu Sans Mono 8

# Display settings
# $ xrandr --listmonitors
# $ xrandr --query
# $ xrandr --output eDP-1 --off # sometimes it can be eDP1
# $ xrandr --auto # reset settings
# exec --no-startup-id xrandr --output eDP-1 --off
# exec only works on startup, alternative is exec_always
# Disable laptop monitor if monitor is connected on startup
exec --no-startup-id if [ "$(xrandr --listmonitors|head -1|cut -d" " -f2)" -gt "1" ]; then xrandr --output $(xrandr --listmonitors|grep eDP|cut -d" " -f6) --off; fi
set $mode_display "Display: [a]uto, [E] eDP ON, [e] eDP OFF, [H] HDMI ON, [h] HDMI OFF; Extend: [1] HDMI1|HDMI2, [2] HDMI2|HDMI1"
mode $mode_display {
    bindsym a       exec --no-startup-id xrandr --auto, mode "default"
    bindsym Shift+e exec --no-startup-id xrandr --output $(xrandr --query|grep ' connected '|awk '{ print $1 }'|grep eDP) --auto, mode "default"
    bindsym e       exec --no-startup-id xrandr --output $(xrandr --query|grep ' connected '|awk '{ print $1 }'|grep eDP) --off, mode "default"
    bindsym Shift+h exec --no-startup-id xrandr --output $(xrandr --query|grep ' connected '|awk '{ print $1 }'|grep HDMI) --auto, mode "default"
    bindsym h       exec --no-startup-id xrandr --output $(xrandr --query|grep ' connected '|awk '{ print $1 }'|grep HDMI) --off, mode "default"
    bindsym Shift+v exec --no-startup-id xrandr --output $(xrandr --query|grep ' connected '|awk '{ print $1 }'|grep VGA) --auto, mode "default"
    bindsym v       exec --no-startup-id xrandr --output $(xrandr --query|grep ' connected '|awk '{ print $1 }'|grep VGA) --off, mode "default"
    # Entend monitor
    bindsym 1 exec --no-startup-id xrandr --auto && LAPTOP=$(xrandr --query|grep ' connected '|awk '{ print $1 }'|grep eDP) && xrandr --output $(xrandr --query|grep ' connected '|awk '{ print $1 }'|grep HDMI*1) --auto --left-of $LAPTOP && xrandr --output $(xrandr --query|grep ' connected '|awk '{ print $1 }'|grep HDMI*2) --auto --right-of $LAPTOP, mode "default"
    bindsym 2 exec --no-startup-id xrandr --auto && LAPTOP=$(xrandr --query|grep ' connected '|awk '{ print $1 }'|grep eDP) && xrandr --output $(xrandr --query|grep ' connected '|awk '{ print $1 }'|grep HDMI*1) --auto --right-of $LAPTOP && xrandr --output $(xrandr --query|grep ' connected '|awk '{ print $1 }'|grep HDMI*2) --auto --left-of $LAPTOP, mode "default"
    bindsym Escape mode "default"
    bindsym Return mode "default"
}
bindsym $mod+p mode $mode_display

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Script for sway and i3 to automatically switch the horizontal / vertical window split orientation
# https://github.com/nwg-piotr/autotiling
exec_always --no-startup-id autotiling

# Use pactl to adjust volume in PulseAudio.
# set $refresh_i3status killall -SIGUSR1 i3status
set $refresh_i3status pkill -SIGRTMIN+10 i3blocks
# NOTE: pulsemixer max volume is 150%
bindsym XF86AudioRaiseVolume exec --no-startup-id pulsemixer --change-volume +5 && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pulsemixer --change-volume -5 && $refresh_i3status
bindsym $mod+XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && $refresh_i3status
bindsym $mod+XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use brightnessctl to adjust brightness
bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl set +5% && $refresh_i3status
# Min brightness is set to 0.1
bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl --min-val=$(bc<<<$(echo "$(brightnessctl|grep 'Max brightness'|cut -d' ' -f3)*0.1")) set 5%- && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag modifier titlebar

# start a terminal
# bindsym $mod+Return exec i3-sensible-terminal
set $terminal "wezterm"
bindsym $mod+Return exec $terminal

# kill focused window
bindsym $mod+c kill

# start dmenu (a program launcher)
# bindsym $mod+d exec --no-startup-id dmenu_run
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
bindsym $mod+space exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+minus split h

# split in vertical orientation
bindsym $mod+bar split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle
# floating pop up automatically
for_window [window_role="pop-up"] floating enable
for_window [window_role="task_dialog"] floating enable
# specify apps to be floating
#for_window [class="Keepassx"] floating enable

# change focus between tiling / floating windows
# bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10
bindsym $mod+Tab workspace back_and_forth

# Startup apps
set $browser "brave-browser"
assign [class=$browser] $ws1
# NOTE : run `xwininfo` in a terminal and select the window for information
assign [class="Brave"] $ws1
assign [class=$terminal] $ws2
for_window [class=$browser] focus
for_window [class="Brave"] focus
for_window [class=$terminal] focus
exec --no-startup-id $browser
exec --no-startup-id $terminal
# Always switch to workspace 1 on startup
exec --no-startup-id i3-msg "workspace $ws1"

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
# bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"
# NOTE: mode does not work well with commas
set $mode_system "Power: [l]ogout [z]sleep [h]ibernate [r]eboot [s]hutdown"
mode $mode_system {
    # bindsym l exec i3-msg [class=$browser] kill && sleep 1 && i3-msg exit
    bindsym l exec i3-msg [class="Brave"] kill && sleep 1 && i3-msg exit
    bindsym z exec systemctl suspend
    bindsym h exec systemctl hibernate
    bindsym r exec systemctl reboot
    bindsym s exec systemctl poweroff
    bindsym Escape mode "default"
    bindsym Return mode "default"
}
bindsym $mod+Shift+e mode $mode_system

# resize window (you can also use the mouse for that)
mode "resize" {
    # These bindings trigger as soon as you enter the resize mode

    # Pressing left will shrink the window’s width.
    # Pressing right will grow the window’s width.
    # Pressing up will shrink the window’s height.
    # Pressing down will grow the window’s height.
    bindsym h resize shrink width 10 px or 10 ppt
    bindsym j resize grow height 10 px or 10 ppt
    bindsym k resize shrink height 10 px or 10 ppt
    bindsym l resize grow width 10 px or 10 ppt

    # same bindings, but for the arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    # back to normal: Enter or Escape or $mod+r
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
    # status_command i3status
    # separator_symbol " | "

    # 1 = Left, 2 = Middle, 3 = Right, 4 = Scroll Up, 5 = Scroll Down, 6 = Custom, 7 = Custom, 8 = Upper Thumb, 9 = Lower Thumb, 10+ = Custom
    status_command i3blocks
    position top
    font pango:JetBrainsMono Nerd Font Semi-Bold 12
}
